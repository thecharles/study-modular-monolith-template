root= true

[*.cs]
trim_trailing_whitespace= true
insert_final_newline= true
end_of_line = lf

[*]
indent_style = tab
indent_size = 4

[*.cshtml]
indent_style = tab
indent_size = 4
end_of_line = lf

[*.{fs,fsx,yml}]
indent_style = space
indent_size = 4
end_of_line = lf

[*.{md,markdown,json,js,csproj,fsproj,targets,targets,props}]
indent_style = space
indent_size = 2
end_of_line = lf

# Dotnet code style settings:
[*.{cs,vb}]

# langugage conventions https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#language-conventions

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false:error
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_property = false:error

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:error
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:error
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:error
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:error

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error

# Expression-level preferences
dotnet_style_coalesce_expression = true:none
dotnet_style_collection_initializer = true:error
dotnet_style_explicit_tuple_names = true:error
dotnet_style_null_propagation = true:error
dotnet_style_object_initializer = true:error
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:error
dotnet_style_prefer_conditional_expression_over_assignment = true:error
dotnet_style_prefer_conditional_expression_over_return = true:none
dotnet_style_prefer_inferred_anonymous_type_member_names = true:error
dotnet_style_prefer_inferred_tuple_names = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
csharp_style_prefer_primary_constructors = true:suggestion

[*.{cs,vb}]
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:error

# Parameter preferences
dotnet_code_quality_unused_parameters = all:error

#### C# Coding Conventions ####

# Namespace preferences
csharp_style_namespace_declarations = file_scoped:error

# var preferences
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:error
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:error
csharp_style_expression_bodied_lambdas = true:none
csharp_style_expression_bodied_local_functions = false:none
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = true:error
csharp_style_expression_bodied_properties = true:error

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:error
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_prefer_switch_expression = true:error

# Null-checking preferences
csharp_style_conditional_delegate_call = true:error

# Modifier preferences
csharp_prefer_static_local_function = true:error
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error

# Code-block preferences
csharp_prefer_braces = true:error
csharp_prefer_simple_using_statement = true:error

# Expression-level preferences
csharp_prefer_simple_default_expression = true:error
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:error
csharp_style_pattern_local_over_anonymous_function = true:error
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:none
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:error

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
# csharp_new_line_before_members_in_anonymous_types = true
# csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# Custom Rules - configure these as required

# .NET Code Analyzers rules

# CA1000: Do not declare static members on generic types
# dotnet_diagnostic.CA1000.severity = none

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = none

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = none

# CA1019: Define accessors for attribute arguments
# dotnet_diagnostic.CA1019.severity = none

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = none

# CA1030: Use events where appropriate
# dotnet_diagnostic.CA1030.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none

# CA1051: Do not declare visible instance fields
# dotnet_diagnostic.CA1051.severity = none

# CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = none

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = none

# CA1307: Specify StringComparison for clarity
# dotnet_diagnostic.CA1307.severity = none

# CA1308: Normalize strings to uppercase
# dotnet_diagnostic.CA1308.severity = none

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = none

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = none

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = none

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = none

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = none

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = none

# CA1860: Avoid using 'Enumerable.Any()' extension method
# dotnet_diagnostic.CA1860.severity = none

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = none

# CA2211: Non-constant fields should not be visible
# dotnet_diagnostic.CA2211.severity = none

# CA2213: Disposable fields should be disposed
# dotnet_diagnostic.CA2213.severity = none

# CA2225: Operator overloads have named alternates
# dotnet_diagnostic.CA2225.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = none

# CA2225: Provide a method named 'ToResult' or 'FromTValue' as an alternate for operator op_Implicit
dotnet_diagnostic.CA2225.severity = none

# CA1310: The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings
dotnet_diagnostic.CA1310.severity = suggestion

# CA2326: Do not use TypeNameHandling values other than None
# dotnet_diagnostic.CA2326.severity = none

# CA2326: Do not use insecure JsonSerializerSettings
# dotnet_diagnostic.CA2327.severity = none

# CS8600: Converting null literal or possible null value to non-nullable type.
# dotnet_diagnostic.CS8600.severity = none

# CS8603: Possible null reference return.
# dotnet_diagnostic.CS8603.severity = none

# CS8618: Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
# dotnet_diagnostic.CS8618.severity = none

# IDE Code Analyzers rules

# IDE0046: Convert to conditional expression
# dotnet_diagnostic.IDE0046.severity = none

# IDE0053: Use expression body for lambda expression
# dotnet_diagnostic.IDE0053.severity = none

# IDE0270: Use coalesce expression
# dotnet_diagnostic.IDE0270.severity = none

# IDE0290: Use primary constructor
# dotnet_diagnostic.IDE0290.severity = none

# SonarAnalyzer.CSharp rules

# S112: General or reserved exceptions should never be thrown
dotnet_diagnostic.S112.severity = none

# S1075: URIs should not be hardcoded
# dotnet_diagnostic.S1075.severity = none

# S2094: Utility classes should not have public constructors
# dotnet_diagnostic.S1118.severity = none

# S1144: Unused private types or members should be removed
# dotnet_diagnostic.S1144.severity = none

# S2094: Classes should not be empty
dotnet_diagnostic.S2094.severity = none

# S2365: Properties should not make collection or array copies
# dotnet_diagnostic.S2365.severity = none

# S3267: Loops should be simplified with "LINQ" expressions
# dotnet_diagnostic.S3267.severity = none

# S3881: "IDisposable" should be implemented correctly
# dotnet_diagnostic.S3881.severity = none

# S4136: Method overloads should be grouped together
# dotnet_diagnostic.S4136.severity = none

# S6605: Collection-specific "Exists" method should be used instead of the "Any" extension
# dotnet_diagnostic.S6605.severity = none

# S6667: Logging in a catch clause should pass the caught exception as a parameter.
dotnet_diagnostic.S6667.severity = suggestion

# S4830: Enable server certificate validation on this SSL/TLS connection
dotnet_diagnostic.S4830.severity = suggestion

# CA5359: The ServerCertificateValidationCallback is set to a function that accepts any server certificate, by always returning true. Ensure that server certificates are validated to verify the identity of the server receiving requests.
dotnet_diagnostic.CA5359.severity = suggestion

# S125: Remove this commented out code
dotnet_diagnostic.S125.severity = suggestion

# CA1308: In method 'Create', replace the call to 'ToLower' with 'ToUpperInvariant'
dotnet_diagnostic.CA1308.severity = suggestion

# CA1311: Specify a culture or use an invariant version to avoid implicit dependency on current culture
dotnet_diagnostic.CA1311.severity = suggestion

# CA1304: The behavior of 'string.ToLower()' could vary based on the current user's locale settings. Replace this call in 'QueryableStringInvariantContainsHandler.HandleOperation(QueryableFilterContext, IFilterOperationField, IValueNode, object)' with a call to 'string.ToLower(CultureInfo)'.
dotnet_diagnostic.CA1304.severity = suggestion

# CA1305: The behavior of 'Logger.Info(string, string)' could vary based on the current user's locale settings. Replace this call in '<top-level-statements-entry-point>' with a call to 'Logger.Info(IFormatProvider, string, string)'.
dotnet_diagnostic.CA1305.severity = suggestion

# CA1309: Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = suggestion

# Error CA1515: Because an application's API isn't typically referenced from outside the assembly, types can be made internal
dotnet_diagnostic.CA1515.severity = suggestion

# S1135: Complete the task associated to this "TO DO" comment.
dotnet_diagnostic.S1135.severity = suggestion

# S6668: Logging arguments should be passed to the correct parameter
dotnet_diagnostic.S6668.severity = suggestion

# S6608: Indexing at 0 should be used instead of the "Enumerable" extension method "First"
dotnet_diagnostic.S6608.severity = suggestion

# S6602: "Find" method should be used instead of the "FirstOrDefault" extension method.
dotnet_diagnostic.S6602.severity = none

# RCS1168: Parameter name 'entity' differs from base name 'builder'
dotnet_diagnostic.RCS1168.severity = none

# CA1725: In member void ProductStockConfiguration.Configure(EntityTypeBuilder<ProductStock> entity), change parameter name entity to builder in order to match the identifier as it has been declared in void IEntityTypeConfiguration<ProductStock>.Configure(EntityTypeBuilder<ProductStock> builder)
dotnet_diagnostic.CA1725.severity = none

# S927: Rename parameter 'modelBuilder' to 'builder' to match the base class declaration.
dotnet_diagnostic.S927.severity = none

# RCS1205: Order named arguments according to the order of parameters
dotnet_diagnostic.RCS1205.severity = suggestion

# S2696: Make the enclosing instance method 'static' or remove this set on the 'static' field.
dotnet_diagnostic.S2696.severity = none

# Resharper
resharper_csharp_braces_for_lock=required
resharper_csharp_braces_for_using=required
resharper_csharp_braces_for_while=required
resharper_csharp_braces_for_foreach=required
resharper_csharp_braces_for_for=required
resharper_csharp_braces_for_fixed=required
resharper_csharp_braces_for_ifelse=required

# Meziantou.Analyzer

[*.cs]

# MA0002: Use an overload that has a IEqualityComparer<string> or IComparer<string> parameter
dotnet_diagnostic.MA0002.severity = suggestion

# MA0003: Add parameter name to improve readability
dotnet_diagnostic.MA0003.severity = none

# MA0004: Use Task.ConfigureAwait
dotnet_diagnostic.MA0004.severity = none

# MA0006: Use string.Equals instead of Equals operator
dotnet_diagnostic.MA0006.severity = suggestion

# MA0007: Add comma after the last value
dotnet_diagnostic.MA0007.severity = none

# MA0009: Regular expressions should not be vulnerable to Denial of Service attacks
dotnet_diagnostic.MA0009.severity = suggestion

# MA0011: Use an overload of 'ToLower' that has a 'System.Globalization.CultureInfo' parameter
dotnet_diagnostic.MA0011.severity = suggestion

# MA0015: Use an overload of 'System.ArgumentException' with the parameter name
dotnet_diagnostic.MA0015.severity = suggestion

# MA0016: Prefer using collection abstraction instead of implementation
dotnet_diagnostic.MA0016.severity = none

# MA0020: Use 'Find()' instead of 'FirstOrDefault()
dotnet_diagnostic.MA0020.severity = none

# MA0023: Add RegexOptions.ExplicitCapture to prevent capturing unneeded groups
dotnet_diagnostic.MA0023.severity = suggestion

# MA0026: Complete the task associated to this "TO DO" comment.
dotnet_diagnostic.MA0026.severity = suggestion

# MA0048: File name must match type name
dotnet_diagnostic.MA0048.severity = suggestion

# MA0049: Type name should not match containing namespace
dotnet_diagnostic.MA0049.severity = suggestion

# MA0074: Use an overload of 'StartsWith' that has a StringComparison parameter
dotnet_diagnostic.MA0074.severity = suggestion

# MA0132: Do not convert implicitly to DateTimeOffset
dotnet_diagnostic.MA0132.severity = suggestion

dotnet_analyzer_diagnostic.category-roslynator.severity = error
roslynator_analyzers.enabled_by_default = true

# RCS1036: Remove unnecessary blank line
dotnet_diagnostic.RCS1036.severity = none

# RCS1037: Remove trailing white-space
dotnet_diagnostic.RCS1037.severity = none

# RCS1161: Enum should declare explicit values
dotnet_diagnostic.RCS1161.severity = none

# RCS1124: Inline local variable
dotnet_diagnostic.RCS1124.severity = suggestion

# RCS1021: Use expression-bodied lambda
dotnet_diagnostic.RCS1021.severity = suggestion

# RCS1212: Remove redundant assignment
dotnet_diagnostic.RCS1212.severity = suggestion

# RCS1077: Optimize LINQ method call
dotnet_diagnostic.RCS1077.severity = none

# RCS1073: Convert 'if' to 'return' statement
dotnet_diagnostic.RCS1073.severity = suggestion

# RCS1201: Use method chaining
dotnet_diagnostic.RCS1201.severity = suggestion

# RCS1181: Convert comment to documentation comment
dotnet_diagnostic.RCS1181.severity = none

# RCS1141: Add 'param' element to documentation comment
dotnet_diagnostic.RCS1141.severity = none

# CA1054: Change the type of parameter 'url' of method 'IEmailLinkViewRepository.UpdateViewCounterAsync(string)' from 'string' to 'System.Uri', or provide an overload to 'IEmailLinkViewRepository.UpdateViewCounterAsync(string)' that allows 'url' to be passed as a 'System.Uri' object
dotnet_diagnostic.CA1054.severity = none

# S2139: Either log this exception and handle it, or rethrow it with some contextual information.
dotnet_diagnostic.S2139.severity = suggestion

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = none

# IDE0290: Use primary constructor
dotnet_diagnostic.IDE0290.severity = none

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = none

# IDE0022: Use block body for method
dotnet_diagnostic.IDE0022.severity = none

# IDE0130: Namespace "*" does not match folder structure
dotnet_diagnostic.IDE0130.severity = none

# Error IDE0072: Populate switch
dotnet_diagnostic.IDE0072.severity = none

# Error IDE0300: Collection initialization can be simplified
dotnet_diagnostic.IDE0300.severity = suggestion

# Error IDE0305: Collection initialization can be simplified
dotnet_diagnostic.IDE0305.severity = suggestion

[*.{sh,bat,ps1}]
trim_trailing_whitespace= true
insert_final_newline= true